/**
 * Shared styles for the ForgetfulMe extension
 * Using Pico CSS v2 as the base framework
 * 
 * This CSS file provides common styling components used across all extension pages:
 * - Utility classes for common display and sizing needs
 * - Loading states and spinners for async operations
 * - Toast message system with different types (success, error, warning, info)
 * - Empty state styling for when no data is available
 * - Status indicators and tag components
 * - Form enhancements and modal improvements
 * - Responsive utilities and accessibility improvements
 * - Dark mode support and print styles
 * 
 * These styles extend Pico CSS with custom components while maintaining
 * consistency with the framework's design system.
 */

/* Utility Classes */
/* Common utility classes for display and sizing */
.hidden {
  display: none !important;
}

.small {
  font-size: 0.875rem;
}

/* Loading States */
/* Animated spinner and loading state containers */
.loading-spinner {
  width: 2rem;
  height: 2rem;
  border: 2px solid var(--pico-muted-border-color);
  border-top: 2px solid var(--pico-primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin: 0 auto;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.loading-state {
  text-align: center;
  padding: calc(var(--pico-spacing) * 2);
  color: var(--pico-color);
}

.loading-state p {
  margin-top: var(--pico-spacing);
  font-size: 0.875rem;
  color: var(--pico-muted-color);
}

/* Messages */
/* Toast notification system with different message types */
.message-area {
  position: fixed;
  top: var(--message-area-top, var(--pico-spacing));
  right: var(--message-area-right, var(--pico-spacing));
  left: var(--message-area-left, auto);
  z-index: 1000;
  max-width: var(--message-area-max-width, 300px);
}

.message {
  padding: calc(var(--pico-spacing) * 0.75) var(--pico-spacing);
  margin-bottom: calc(var(--pico-spacing) * 0.5);
  border-radius: var(--pico-border-radius);
  font-size: 0.875rem;
  line-height: 1.4;
  animation: slideIn 0.3s ease-out;
}

.message.success {
  background-color: var(--pico-ins-background-color);
  color: var(--pico-ins-color);
  border: var(--pico-border-width) solid var(--pico-ins-color);
}

.message.error {
  background-color: var(--pico-del-background-color);
  color: var(--pico-del-color);
  border: var(--pico-border-width) solid var(--pico-del-color);
}

.message.warning {
  background-color: var(--pico-mark-background-color);
  color: var(--pico-mark-color);
  border: var(--pico-border-width) solid var(--pico-mark-color);
}

.message.info {
  background-color: var(--pico-code-background-color);
  color: var(--pico-code-color);
  border: var(--pico-border-width) solid var(--pico-muted-border-color);
}

@keyframes slideIn {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

/* Empty States */
/* Styling for when no data is available to display */
.empty-state {
  text-align: center;
  padding: var(--empty-state-padding, calc(var(--pico-spacing) * 3) calc(var(--pico-spacing) * 2));
  color: var(--pico-muted-color);
}

.empty-state h3 {
  margin-bottom: calc(var(--pico-spacing) * 0.5);
  font-size: var(--empty-state-h3-font-size, inherit);
  color: var(--pico-color);
}

.empty-state p {
  margin-bottom: var(--empty-state-p-margin-bottom, calc(var(--pico-spacing) * 1.5));
  font-size: var(--empty-state-p-font-size, 0.875rem);
}

/* Status Indicators */
/* Visual status badges with colored dots */
.status-indicator {
  display: inline-flex;
  align-items: center;
  gap: calc(var(--pico-spacing) * 0.25);
  padding: calc(var(--pico-spacing) * 0.25) calc(var(--pico-spacing) * 0.5);
  border-radius: var(--pico-border-radius);
  font-size: 0.75rem;
  font-weight: 500;
  text-transform: capitalize;
}

.status-dot {
  width: 0.5rem;
  height: 0.5rem;
  border-radius: 50%;
  flex-shrink: 0;
}

/* Tag Elements */
/* Removable tag components for categorization */
.tag {
  display: inline-block;
  padding: calc(var(--pico-spacing) * 0.125) calc(var(--pico-spacing) * 0.375);
  margin: calc(var(--pico-spacing) * 0.125);
  background-color: var(--pico-code-background-color);
  color: var(--pico-code-color);
  border-radius: var(--pico-border-radius);
  font-size: 0.75rem;
  text-decoration: none;
  border: var(--pico-border-width) solid var(--pico-muted-border-color);
}

.tag:hover {
  background-color: var(--pico-secondary-background);
  color: var(--pico-secondary-inverse);
  border-color: var(--pico-secondary-border);
}

.tag-list {
  display: flex;
  flex-wrap: wrap;
  gap: calc(var(--pico-spacing) * 0.25);
  margin: calc(var(--pico-spacing) * 0.25) 0;
}

/* Tab Navigation Components */
/* Unified tab styling for consistent navigation across all pages */
.tab-navigation {
  display: flex;
  gap: calc(var(--pico-spacing) * 0.5);
  margin-bottom: var(--pico-spacing);
}

.tab-button {
  flex: 1;
  margin: 0;
  padding: calc(var(--pico-spacing) * 0.75) var(--pico-spacing);
  font-size: 0.875rem;
  white-space: nowrap;
  border-radius: var(--pico-border-radius);
}

/* Active state uses default Pico button styling, inactive uses secondary */
.tab-button:not(.active) {
  /* Handled by .secondary class in HTML */
}

/* Form Enhancements - Use Pico's built-in grid when possible */
/* Responsive form layouts and action button styling */
.form-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: var(--pico-spacing);
}

.form-actions {
  display: flex;
  gap: calc(var(--pico-spacing) * 0.5);
  justify-content: flex-end;
  margin-top: var(--pico-spacing);
}

.form-actions button {
  margin: 0;
}

/* Modal Improvements - Use Pico spacing variables */
/* Enhanced modal styling with consistent spacing */
dialog {
  max-width: 500px;
  margin: auto;
}

dialog article {
  margin: 0;
}

.modal-actions {
  display: flex;
  gap: var(--modal-actions-gap, calc(var(--pico-spacing) * 0.5));
  justify-content: flex-end;
  margin-top: calc(var(--pico-spacing) * 1.5);
  padding-top: var(--modal-actions-padding-top, 0);
  border-top: var(--modal-actions-border-top, none);
}

.modal-actions button {
  margin: 0;
  min-width: var(--modal-actions-button-min-width, auto);
}

.close-button {
  background: none;
  border: none;
  font-size: 1.5rem;
  cursor: pointer;
  padding: var(--close-button-padding, 0);
  margin: var(--close-button-margin, 0);
  color: var(--pico-muted-color);
  line-height: 1;
  border-radius: var(--close-button-border-radius, 0);
  transition: var(--close-button-transition, none);
}

.close-button:hover {
  color: var(--pico-color);
  background-color: var(--close-button-hover-bg, transparent);
}

/* Responsive Utilities */
/* Mobile-first responsive adjustments */
@media (max-width: 768px) {
  .form-grid {
    grid-template-columns: 1fr;
  }

  .form-actions {
    flex-direction: column;
  }

  .modal-actions {
    flex-direction: column;
  }

  .message-area {
    left: 1rem;
    right: 1rem;
    max-width: none;
  }
}

/* Focus Improvements */
/* Enhanced focus indicators for accessibility */
button:focus-visible,
input:focus-visible,
select:focus-visible,
textarea:focus-visible {
  outline: calc(var(--pico-outline-width) * 2) solid var(--pico-primary);
  outline-offset: calc(var(--pico-outline-width));
}

/* Dark Mode Support */
/* Pico CSS variables automatically handle dark mode - no custom overrides needed */

/* Accessibility Improvements */
/* Disable animations for motion sensitivity */
@media (prefers-reduced-motion: reduce) {
  .loading-spinner {
    animation: none;
  }

  .message {
    animation: none;
  }
}

/* Print Styles */
/* Hide interactive elements when printing */
@media print {
  .message-area,
  .loading-spinner,
  button {
    display: none !important;
  }
}
